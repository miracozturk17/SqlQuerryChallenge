 /*
SENARYO OLARAK BIR BANKAMATIK ISLEMINI BAZ ALALIM.

KULLANICI BANKAMATIK UZERINDEN KENDI HESABINA PARA YATIRIP,CEKEBILIYOR.(INSERT/DELETE)

MEVCUT PARA ISLEMLERINDEN HERHANGI BIRINI GERCEKLESTIRECEKKEN ISLEMIN YARIDA KALDIGINI BAZ ALALIM.

BU SENARYO UZERINDEN SISTEMIMIZI OLUSTURMAYA BASLAYALIM.
*/

--YAPI ICIN PALNLADIGIMIZ "ATM"  ORNEK VERI TABANINI OLUSTURALIM.
--MEVCUT SQL SORGUSU;
CREATE DATABASE ATM
GO

--ATM VERITABANINI KULLANARAK KULLANICILAR ICIN TABLO OLUSTURLAIM.
--MEVCUT SQL SORGUSU;
USE ATM
GO
CREATE TABLE BANKCUSTOMER
(
	CustomerId INT NOT NULL PRIMARY KEY IDENTITY,
	Name NVARCHAR(500) NOT NULL,
	Surname NVARCHAR(500) NOT NULL,
	TurkishIdentity CHAR(11) NULL UNIQUE

	--CONSTRAINT chk_TurkishIdentity CHECK (TurkishIdentity LIKE '[1-9] [0-9] [0-9] [0-9] [0-9] [0-9] [0-9] [0-9] [0-9] [0-9] [02468]')
)

--SON OLARAK KULLANICININ BAKIYE VE KISMI BILGILERININ BULUNDUGU EK TABLOMUZU OLUSTURALIM.
--MEVCUT SQL SORGUSU;
GO
CREATE TABLE ACCOUNT
(
	AccountId INT NOT NULL PRIMARY KEY IDENTITY,
	AccountNumber NVARCHAR(50) NOT NULL,
	CustomerId INT NOT NULL FOREIGN KEY	REFERENCES BANKCUSTOMER(CustomerId),
	TotalCash MONEY NULL
)
GO

--OLUSTURMA ISLEMLERIMIZDEN SONRA YAPIMIZA ORNEK VERILER EKLEYELIM.
--MEVCUT SQL SORGUSU;
INSERT 
INTO BANKCUSTOMER
VALUES
('MÝRAÇ','ÖZTÜRK',12312312312),
('KADÝR','ÖZTÜRK',12312312316)
GO

INSERT 
INTO ACCOUNT
VALUES
('1024',1,10000),
('1025',2,6000)

--OLUSTURDUGUMUZ TABLO YAPISINI QUERRY UZERINDE INCELERSEK;
SELECT 
	AccountNumber AS [HESAPNUMARASI],
	Name +' '+Surname AS [ISIM-SOYISIM],
	TurkishIdentity AS [TCKIMLIK],
	TotalCash AS [BAKIYE]
FROM ACCOUNT
INNER JOIN BANKCUSTOMER ON BANKCUSTOMER.CustomerId=ACCOUNT.AccountId

--MEVCUT SITEMIMIZ UZERINDE ISLEM YAPMADAN HESABIN VARLIGINI KONTROL ETMEMIZ GEREKIYOR.
--MEVCUT SQL SORGUSU;
CREATE FUNCTION fn_HesapVarMý
(@ACCOUNTNO NVARCHAR(10))
RETURNS BIT
BEGIN
DECLARE @STATUS BIT=0
IF EXISTS 
		(SELECT * FROM ACCOUNT WHERE AccountNumber = @ACCOUNTNO)
BEGIN
	SET @STATUS = 1
END
RETURN @STATUS
END

--YAPIMIZ UZERINDE ISLEM YAPMADAN HESABIN GERCEKLESTIRECEGI TRANSFER TUTARININ YETERLI OLUP OLMADIGINI KONRTOL ETMEMIZ GEREKMEKTEDIR.
--MEVCUT SQL SORGUSU;
CREATE FUNCTION fn_BakiyeYeterliMi
(@ACCOUNTNO INT,@CASH MONEY)
RETURNS BIT
BEGIN
DECLARE @STATUS BIT =0
IF (SELECT TotalCash FROM ACCOUNT WHERE AccountNumber= @ACCOUNTNO) >= @CASH
BEGIN SET @STATUS = 1 END
RETURN @STATUS
END

--HESAPLAR ARASI PARA TRANSFERINE AIT BIR YAPI OLUSTURUYORUZ.
--MEVCUT SQL SORGUSU;
ALTER PROCEDURE sp_HesaplarArasiTransfer
@RECEVIER NVARCHAR(10),
@SENDER NVARCHAR(10),
@CASH MONEY
AS

IF dbo.fn_HesapVarMý(@RECEVIER) = 1 
									AND
   dbo.fn_HesapVarMý(@SENDER) = 1
BEGIN

IF dbo.fn_BakiyeYeterliMi(@SENDER,@CASH) = 1
BEGIN
BEGIN TRY
	BEGIN TRANSACTION
	UPDATE ACCOUNT SET TotalCash += @CASH
	WHERE AccountNumber = @RECEVIER

	UPDATE ACCOUNT SET TotalCash -= @CASH
	WHERE AccountNumber = @SENDER

	COMMIT TRANSACTION
	END TRY
	BEGIN CATCH
		--PRINT ('PARA GONDERILEMEDI.')
			--IF (COLUMNS_UPDATED() > 0)
		BEGIN
			INSERT INTO CONTENT
			VALUES('GERCEKLESTIRILEN ISLEMDE PARA GONDERILEMEDI. '+ ' ISLEM TARIHI :' + CAST((SELECT GETDATE()) AS NVARCHAR(25)))
	END

	ROLLBACK TRANSACTION
	END CATCH
	END
		ELSE
			--IF (COLUMNS_UPDATED() > 0)
		BEGIN
			INSERT INTO CONTENT
			VALUES('GERCEKLESTIRILEN ISLEM ICIN BAKIYENIZ YETERSIZ. '+ ' ISLEM TARIHI :' + CAST((SELECT GETDATE()) AS NVARCHAR(25)))
	END
		--PRINT ('PARANIZ ISLEM ICIN YETERSIZ.')
	END
		ELSE
			--IF (COLUMNS_UPDATED() > 0)
		BEGIN
			INSERT INTO CONTENT
			VALUES('GERCEKLESTIRILEN ISLEMDE HESAP NO YANLIS. '+ ' ISLEM TARIHI :' + CAST((SELECT GETDATE()) AS NVARCHAR(25)))
		END
		--PRINT ('BELIRTTIGINIZ HESAP NO YANLIS.')

--DENEME AMACIYLA TRANSFER GERCEKLESTIRELIM.
--MEVCUT SQL SORGUSU;
EXECUTE sp_HesaplarArasiTransfer '1024','1025', 550
SELECT * FROM ACCOUNT

--HESAPLAR ARASI TRANSFER PROCEDURUNU BIRAZ ALT YAPILARA PARCALAYIP MEVCUT YAPIMIZI OKUNAKLI VE SADE HALE GETIRELIM.
--BAKIYE GUNCELLEME ISLEMLERINI AYRI BIR YAPIDA DUZENLEYELIM.
--MEVCUT SQL SORGUSU;
CREATE PROCEDURE sp_BakiyeGuncelle
@TOTALCASH MONEY,
@ISADDTOTALCAHS BIT,
@RECEIVERACCOUNT INT,
@SENDERACCOUNT INT
AS

IF @ISADDTOTALCAHS = 1
UPDATE ACCOUNT SET TotalCash += @TOTALCASH
WHERE AccountNumber = @RECEIVERACCOUNT
ELSE
UPDATE ACCOUNT SET TotalCash -= @TOTALCASH
WHERE AccountNumber = @SENDERACCOUNT
GO 

--GERCEKLESTIRDIMIZ PARCALAMA ISLEMINDEN SONRA YAPIMIZITEKRAR DUZENLEYELIM.
--MEVCUT SQL SORGUSU;
ALTER PROCEDURE sp_HesaplarArasiTransfer
@RECEVIER NVARCHAR(10),
@SENDER NVARCHAR(10),
@CASH MONEY
AS

IF dbo.fn_HesapVarMý(@RECEVIER) = 1 
									AND
   dbo.fn_HesapVarMý(@SENDER) = 1
BEGIN

IF dbo.fn_BakiyeYeterliMi(@SENDER,@CASH) = 1
BEGIN
BEGIN TRY
	BEGIN TRANSACTION
	EXECUTE sp_BakiyeGuncelle @CASH,1,@SENDER,@RECEVIER
	EXECUTE sp_BakiyeGuncelle @CASH,0,@SENDER,@RECEVIER

	COMMIT TRANSACTION
	END TRY
	BEGIN CATCH
		PRINT ('PARA GONDERILEMEDI.')
	ROLLBACK TRANSACTION
	END CATCH
	END
		ELSE
		PRINT ('PARANIZ ISLEM ICIN YETERSIZ.')
	END
		ELSE
		PRINT ('BELIRTTIGINIZ HESAP NO YANLIS.')

--TRANSFER YAPIMIZDA PROBLEM OLIUP OLMADIGINI TEST EDELIM.
--MEVCUT SQL SORGUSU;
EXECUTE sp_HesaplarArasiTransfer '1024','1025', 1550
SELECT * FROM ACCOUNT

--MEVCUT HAREKETLERIN DURUMLARINI GORUNTULEYELIM.
--MEVCUT SQL SORGUSU;
CREATE TRIGGER tr_HesapBakiyeGuncelle
ON ACCOUNT
AFTER UPDATE
AS
IF (SELECT COUNT(*) FROM DELETED) > 0
BEGIN
SELECT * FROM DELETED
END