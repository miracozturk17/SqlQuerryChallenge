/*
	FONKSIYON; MATEMATIKSEL OLARAK BIR GIRDIYE YONELIK CIKTI CIKTI VEREN ISLEVSEL ARACTIR.
	SQL SERVERDA; TANIMLI OLAN FONKSIYONLAR GIBI ALDIGI PARAMETRELERI ISLEYEREK GERIYE BIR DEGER DONDUREN SQL IFADELERIDIR.
*/

/*
	SCALAR UDF - X - SCALER USER DEFINED FUNCTIONS / KULLANICI TANIMLI FONKSIYON
	3 TIP UDF VARDIR
	1-SCALER FUNCTIONS / SABIT DEGER DONDUREN
	2-INLINE TABLE-VALUED FUNCTIONS / GERIYE SORGU DONDUREN - TABLO ICERISINDE
	3-MULTI-STATEMENT TABLE-VALUED FUNCTIONS / GERIYE TABLO TABLO DEGISKENI @Table DONDUREN

	YAPILARI;

	CREATE FUNCTION fn_DENEME (@PARAMETER1 DataType,@PARAMETER2 DataType,..,@PARAMETERN DataTypeN)
	RETURNS RETURN_DATATYPE
	AS
	BEGIN
		RETURN RETURN_DATATYPE
	END
 
*/
SELECT * FROM PERSON 
SELECT GETDATE()

--YAS HESAPLAMAK ICIN DOGUM TARIHINI ALAN (DISARDAN VERI ALAN / PARAMETREYE BAGLI) DINAMIK FONKSIYON
CREATE FUNCTION fn_YasHesaplama (@DG DATE)
RETURNS INT
AS
BEGIN
	DECLARE @YAS INT

	SET @YAS = DATEDIFF(YEAR,@DG, GETDATE()) - 
		 			CASE 
						WHEN (MONTH(@DG) > MONTH(GETDATE())) OR 
							 (MONTH(@DG) = MONTH(GETDATE()) AND DAY(@DG) > DAY(GETDATE()))
							 THEN 1
							 ELSE 0
					END 
	RETURN @YAS 
END

--FONKSIYONUMUZU CALISTIRISAK 27 DEGERINI DONDURUR
SELECT dbo.fn_YasHesaplama ('1992-06-18') AS [YAS]

--MEVCUT TABLOLARIMIZIN ICERISNDEKI GENEL DOGUM GUNLERINI BAZ ALIP TUM PERSONELIMIZIN YASINI HESAPLAMAYA CALISIRSAK
SELECT P.*,dbo.fn_YasHesaplama (BirthDate) AS [YAS] FROM PERSON P

--YASI 28 DEN BUYUK OLAN PERSONELLER
SELECT P.*,dbo.fn_YasHesaplama (BirthDate) AS [YAS]  FROM PERSON P
WHERE dbo.fn_YasHesaplama (BirthDate) > 28 
ORDER BY Name DESC


--FONKSIYON ICERIGINI GORMEK ISTERSEK
sp_helptext fn_YasHesaplama

USE BussinesLife

--HERHANGI BIR PARAMETREYE BAGLI OLARAK TABLO DONDUREN FONKSIYONLAR
--CINSIYET DURUMUNA GORE ILGILI PERSONELLERIN BILGILERINI DONDUREN SORGU
CREATE FUNCTION fn_GetGenderOfPerson (@Gender NVARCHAR(10))
RETURNS TABLE
AS
RETURN (
		SELECT P.Name,P.City,P.EMail,P.BirthDate,G.Gender FROM PERSON P
		INNER JOIN GENDER G ON G.GenderID=P.GenderID
		WHERE G.Gender=@Gender
		)

SELECT * FROM fn_GetGenderOfPerson('MALE')

--PARAMETREYE BAGLI TABLO DONDUREN FONKSIYONLARA HERHANGI BIR DURUMA VEYA BAZ ALINAN OZELLIGE GORE KISTAS GETIREBILIRIZ
--TAMAMEN SQL TABLO YAPISI MEVCUTTUR
--SADECE NORMAL TABLOYA GORE TAMAMEN DINAMIK YAPIDADIR
SELECT * FROM fn_GetGenderOfPerson('FEMALE') 
WHERE Name='ÞÖHRET'

--PARAMETRESIZ OLARAK SANAL TABLO OLUSTURUP BELIRLI KISTASLARA GORE VERI DONDUREN TABLOLAR MEVCUTTUR
--HERHANGI BIR PARAMETREYE BAGLI OLMADAN PERSONELLERIN ILGILI DEPARTMANLARINI GETIREN FONKSIYON 
--AMAC MEVCUT BUYUK SORGU YAPILARINDA SORUYU PARCALAR HALINDE DONDURMEYE CALISMAK
--BU NEDENLE FONKSIYONLAR SORGU ANLASILABILIRLILIGI VE KOLAY YONETIMI ACISINDAN ONEMLIDIR
CREATE FUNCTION fn_GetPersonOfDepartment()
RETURNS @Table TABLE (Name NVARCHAR(50),City NVARCHAR(50),Department NVARCHAR(50))
AS
BEGIN 
		INSERT INTO @Table
		SELECT P.Name,P.City,D.Department FROM PERSON P
		INNER JOIN DEPARTMENT D ON D.DepartmentID=P.DepartmentID 
		RETURN
END

SELECT * FROM fn_GetPersonOfDepartment()


/*
		DETERMINISTIK FONKSIYON;  
		HER CAGRIILDIGINDA AYNI SONUCU DONDUREN FONKSIYONDUR.

		ORNEK SQUARE(), SUM()...
		***TUM AGGREGATE FONKSIYONLAR DETERMINISTIKTIR.
 
		NONDETERMINISTIK FONKSIYON;
		HER CAGRIILDIGINDA FARKLI SONUCU DONDUREN FONKSIYONDUR.

		ORNEK GETDATE(), CURRENT_TIMESTAMP...  
*/

--MEVCUT BIR FONKSIYONU SIFRELEMEK ISTERSEK "WITH ENCRYPTION" DIZIMINI AS ONCESINDE SORGUMUZA EKLEMELIYIZ
CREATE FUNCTION fn_GetPersonOfDepartment()
RETURNS @Table TABLE (Name NVARCHAR(50),City NVARCHAR(50),Department NVARCHAR(50))
WITH ENCRYPTION
AS
BEGIN 
		INSERT INTO @Table
		SELECT P.Name,P.City,D.Department FROM PERSON P
		INNER JOIN DEPARTMENT D ON D.DepartmentID=P.DepartmentID 
		RETURN
END

/*
		SQL SERVER UZERINDE OLUSTURDUGUMUZ NESNELERI (VIEW, FUNCTION, STORED PROCEDURE YA DA TRIGGER) KORUMA AMACIYLA (SILINME) 
		WITH SCHEMABINDING PARAMETRESINI KULLANIRIZ.
*/
CREATE FUNCTION fn_GetPersonOfDepartmentSchemaBinding()
RETURNS @Table TABLE (Name NVARCHAR(50),City NVARCHAR(50),Department NVARCHAR(50))
WITH SCHEMABINDING
AS
BEGIN 
		INSERT INTO @Table
		SELECT P.Name,P.City,D.Department FROM dbo.PERSON P
		INNER JOIN dbo.DEPARTMENT D ON D.DepartmentID=P.DepartmentID 
		RETURN
END


/*
		WITH SCHEMABINDING YAPISI OLUSTURULURKEN;

		Msg 4512, Level 16, State 3, Procedure fn_GetPersonOfDepartmentSchemaBindin1g, Line 6 [Batch Start Line 131]
		Cannot schema bind table valued function 'fn_GetPersonOfDepartmentSchemaBindin1g' because name 'PERSON' is invalid for 
		schema binding. Names must be in two-part format and an object cannot reference itself.

		HATASI DONEBILMEKTEDIR.
		BU HATA COZUMU ICIN MEVCUT SORGUDAKI ERISILEN TABLOLARIN BASINA "dbo." KOK DIZIN EKI GETIRILMELIDIR.
		--INNER, OUTTER ... TUM BIRLESTIRMLERDE REFERANS VERILEN TABLOLAR ICIN.
*/